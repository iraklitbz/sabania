import * as _nuxt_schema from '@nuxt/schema';

type VCalendarComponents = {
    DatePicker: boolean;
    Calendar: boolean;
};
interface DarkModeClassConfig {
    selector: string;
    darkClass: string;
}
type DarkModeConfig = boolean | 'system' | Partial<DarkModeClassConfig>;
interface DatePickerPopoverDefaults {
    visibility?: string;
    placement?: string;
    isInteractive?: boolean;
}
interface DatePickerDefaults {
    updateOnInput?: boolean;
    inputDebounce?: number;
    popover?: DatePickerPopoverDefaults;
}
interface Defaults {
    componentPrefix?: string;
    color?: string;
    isDark?: DarkModeConfig;
    navVisibility?: string;
    titlePosition?: string;
    transition?: string;
    touch?: object;
    masks?: object;
    locales?: any;
    datePicker?: DatePickerDefaults;
}
interface ModuleOptions {
    /**
     * @description prefix instead of v-
     * @default V
     */
    prefix: string;
    /**
     * @description load v-calendar styles
     * @default true
     */
    defaultCss: boolean;
    /**
     * @description load custom stylesheet
     * @default undefined
     */
    cssPath?: string;
    /**
     * @description v-calendar options
     * @see https://vcalendar.io/calendar/api.html#defaults
     */
    calendarOptions?: Defaults;
    /**
     * @description auto import v-calendar components
     * @default '{ DatePicker: true, Calendar: true }'
     */
    autoImports: VCalendarComponents;
}
declare const _default: _nuxt_schema.NuxtModule<ModuleOptions>;

export { type Defaults, type ModuleOptions, type VCalendarComponents, _default as default };
